import run.GUI;
import run.socketListener;
ConveyorPlant(
    input signal motConveyorOnOff;
    output signal bottleAtPos1, bottleLeftPos5;
    output signal motConveyorOnOffE, bottleAtPos1E, bottleLeftPos5E;
)
->

{
	new Thread(new GUI()).start();
	new Thread(new socketListener()).start();
		{
	    	while(true) {
	
	        await(motConveyorOnOff);

	        emit bottleAtPos1;
	        pause;
	    	}
	    }
	    
	    
	    ||
	    
	    
	    
	    {// To viz
	        {while(true){present(motConveyorOnOff){emit motConveyorOnOffE;} pause;}}
	        ||
	        {
	            while(true){
	                present(bottleAtPos1){
	                    trap(T){
	                        {
	                            sustain bottleAtPos1E;
	                        }
	                        ||
	                        {
	                        	waitl (1 s);
	                            exit(T);
	                        }
	                    }
	                }
	                pause;
	            }
	        }
	        ||
	        {while(true){present(bottleLeftPos5){emit bottleLeftPos5E;} pause;}}
	    }
}




RotaryPlant(
	    input signal rotaryTableTrigger;
	    output signal tableAlignedWithSensor, bottleAtPos5, capOnBottleAtPos1;
	    output signal tableAlignedWithSensorE, capOnBottleAtPos1E;
	)
	->
	{

	    {// Rotary Table Movement
	    	loop{
				await(rotaryTableTrigger);
				emit tableAlignedWithSensor;
	            System.out.println("*Recieved*");
	            pause;
			}
	    }
	    ||
	    {// To viz
	        {while(true){present(tableAlignedWithSensor){emit tableAlignedWithSensorE;} pause;}}
	        ||
	        {while(true){present(capOnBottleAtPos1){emit capOnBottleAtPos1E;} pause;}}
	    }
}

	
FillerPlant(
			input signal valveInjectorOnOff, valveInletOnOff, dosUnitValveRetract, dosUnitValveExtend ;
			output signal bottleAtPos2,dosUnitEvac,dosUnitFilled;
			output signal valveInjectorOnOffE, valveInletOnOffE, dosUnitValveRetractE, dosUnitValveExtendE,
			bottleAtPos2E, dosUnitEvacE, dosUnitFilledE;
			)->{
				{
					loop{
						await(valveInjectorOnOff);	
						waitl(500 ms);  // Delay before filling
						emit dosUnitFilled;
						pause;
						System.out.println("*Filler - Bottle Filled (Pressure Can At Top) *");
						await(valveInletOnOff);
						waitl(500 ms);  
						emit dosUnitEvac;
						pause;
						System.out.println("*Filler - Inlet Open (Pressure Can At Bottem) *");
					}
				}
				
				||
				
				
				
				{// To viz
				        {while(true){present(valveInjectorOnOff){emit valveInjectorOnOffE;} pause;}}
				        ||
				        {while(true){present(valveInletOnOff){emit valveInletOnOffE;} pause;}}
				        ||
				        {while(true){present(dosUnitValveRetract){emit dosUnitValveRetractE;} pause;}}
				        ||
				        {while(true){present(dosUnitValveExtend){;emit dosUnitValveExtendE;} pause;}}
				        ||
				        {while(true){present(dosUnitEvac){;emit dosUnitEvacE;} pause;}}
				        ||
				        {while(true){present(dosUnitFilled){;emit dosUnitFilledE;} pause;}}
				}
}
			
			
			
			
			
			
		CapperPlant(
					input signal cylPos5ZaxisExtend,gripperTurnRetract,gripperTurnExtend,
					capGripperPos5Extend,cylClampBottleExtend;
					
					output signal gripperZAxisLowered,gripperZAxisLifted,
					gripperTurnHomePos,gripperTurnFinalPos;
					
					output signal cylPos5ZaxisExtendE, gripperTurnRetractE, gripperTurnExtendE,
				    capGripperPos5ExtendE, cylClampBottleExtendE, gripperZAxisLoweredE,
				    gripperZAxisLiftedE, gripperTurnHomePosE, gripperTurnFinalPosE;
					)
			->
					{
					
						{
							loop{

								abort(gripperTurnRetract)
								{
									sustain gripperZAxisLifted;
								}

								await (gripperTurnRetract);
								waitl (1 s);
								emit gripperTurnHomePos;
								pause;
								
								await (cylPos5ZaxisExtend);
								waitl (1 s);
								emit gripperZAxisLowered;
								pause;
								
								await (gripperTurnExtend);
								waitl (1s);
								emit gripperTurnFinalPos;
								pause;

								//waitl (1s);
								emit gripperZAxisLifted;
								}
							}
						||
						{
							//emit bottleatPos4
						}
						
						||
					    {// To viz
					        {while(true){present(cylPos5ZaxisExtend){emit cylPos5ZaxisExtendE;} pause;}}
					        ||
					        {while(true){present(gripperTurnRetract){emit gripperTurnRetractE;} pause;}}
					        ||
					        {while(true){present(gripperTurnExtend){emit gripperTurnExtendE;} pause;}}
					        ||
					        {while(true){present(capGripperPos5Extend){emit capGripperPos5ExtendE;} pause;}}
					        ||
					        {while(true){present(cylClampBottleExtend){emit cylClampBottleExtendE;} pause;}}
					        ||
					        {while(true){present(gripperZAxisLowered){emit gripperZAxisLoweredE;} pause;}}
					        ||
					        {while(true){present(gripperZAxisLifted){emit gripperZAxisLiftedE;} pause;}}
					        ||
					        {while(true){present(gripperTurnHomePos){emit gripperTurnHomePosE;} pause;}}
					        ||
					        {while(true){present(gripperTurnFinalPos){emit gripperTurnFinalPosE;} pause;}}
					    }
					}
			

					
					
				Plant(
						input signal pusherExtend,vacOn,armSource,armDest;
						input signal enable,refill;
						output signal pusherRetracted,pusherExtended,WPgripped,armAtSource,armAtDest,empty;
						output signal pusherRetractedE,pusherExtendedE,WPgrippedE,armAtSourceE,armAtDestE,emptyE;
							)
					->
					{

						signal capDec;
						int signal capPos;
						emit capPos(0);
						{// Arm
							while(true){
								abort(armSource && enable){
									sustain armAtDest;
								}
								await(!enable);
								abort(armDest && enable){
									sustain armAtSource;
								}
								await(!enable);
							}
						}
						||
						{// Pusher
							while(true){
								abort(pusherExtend && enable){
									sustain pusherRetracted;
								}
								await(!enable);
								abort(!pusherExtend && enable){
									sustain pusherExtended;
								}
								await(!enable);
							}
						}
						||
						{// Vacuum
							while(true){
								present(vacOn && armAtSource){
									if((Integer)#capPos == 1){
										emit capPos(0);
										abort(!vacOn){
											sustain WPgripped; 
										}
										present(armAtSource){
											emit capPos(1);
										}
									}
								}
								pause;
							}
						}
						||
						{
							/*
							 * Cap positions
							 * 0 = at Mag
							 * 1 = at pick-up
							 */
							while(true){
								// At mag
								abort(empty){
									while(true){
											await(pusherRetracted);
											await(pusherExtended);
											// At pick-up
											emit capPos(1);
											await(pusherRetracted);
											emit capDec;
									}
								}
								await(refill);
							}
						}
						||
						{
							int capcount = 5;
							while(true){
								present(capDec){
									if(capcount > 0)
										capcount--;
								}
								present(refill){
									capcount = 5;
								}
//								present(pusherRetracted){
									if(capcount == 0)
										emit empty;
//								}
								pause;
							}
						}
						||
						{// To viz
							{while(true){present(pusherRetracted){emit pusherRetractedE;} pause;}}
							||
							{while(true){present(pusherExtended){emit pusherExtendedE;} pause;}}
							||
							{while(true){present(WPgripped){emit WPgrippedE;} pause;}}
							||
							{while(true){present(armAtSource){emit armAtSourceE;} pause;}}
							||
							{while(true){present(armAtDest){emit armAtDestE;} pause;}}
							||
							{while(true){present(empty){emit emptyE;} pause;}}
						}
					}

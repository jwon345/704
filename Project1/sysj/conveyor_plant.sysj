import run.GUI;

ConveyorPlant(
    input signal motConveyorOnOff;
    output signal bottleAtPos1, bottleLeftPos5;
    output signal motConveyorOnOffE, bottleAtPos1E, bottleLeftPos5E;
)
->

{
	new Thread(new GUI()).start();
		{
	    	while(true) {
	
	        await(motConveyorOnOff);
	        waitl (1 s);
	        
	        trap(T) {
	            {
	                sustain bottleAtPos1;
	                System.out.println("*Bottle At Pos1*");
	            }
	            ||
	            {
	                await(!motConveyorOnOff);
	                exit(T);
	            }
	        }
	    	}
	    }
	    
	    
	    ||
	    
	    
	    
	    {// To viz
	        {while(true){present(motConveyorOnOff){emit motConveyorOnOffE;} pause;}}
	        ||
	        {
	            while(true){
	                present(bottleAtPos1){
	                    trap(T){
	                        {
	                            sustain bottleAtPos1E;
	                        }
	                        ||
	                        {
	                        	await (motConveyorOnOff);
	                            exit(T);
	                        }
	                    }
	                }
	                pause;
	            }
	        }
	        ||
	        {while(true){present(bottleLeftPos5){emit bottleLeftPos5E;} pause;}}
	    }
}




RotaryPlant(
	    input signal rotaryTableTrigger;
	    output signal tableAlignedWithSensor, bottleAtPos5, capOnBottleAtPos1;
	    output signal tableAlignedWithSensorE, bottleAtPos5E, capOnBottleAtPos1E, rotaryTableTriggerE;
	)
	->
	{

	    {// Rotary Table Movement
	    	loop{
				await(rotaryTableTrigger);
				pause;
				emit tableAlignedWithSensor;
	            System.out.println("*Recieved*");
			}
	    }
	    ||
	    {// To viz
	        {while(true){present(tableAlignedWithSensor){emit tableAlignedWithSensorE;} pause;}}
	        ||
	        {while(true){present(bottleAtPos5){emit bottleAtPos5E;} pause;}}
	        ||
	        {while(true){present(capOnBottleAtPos1){emit capOnBottleAtPos1E;} pause;}}
	        ||
	        {while(true){present(rotaryTableTrigger){;emit rotaryTableTriggerE;} pause;}}
	    }
}

	
FillerPlant(
			input signal valveInjectorOnOff, valveInletOnOff, dosUnitValveRetract, dosUnitValveExtend ;
			output signal bottleAtPos2,dosUnitEvac,dosUnitFilled;
			output signal valveInjectorOnOffE, valveInletOnOffE, dosUnitValveRetractE, dosUnitValveExtendE,
			bottleAtPos2E, dosUnitEvacE, dosUnitFilledE;
			)->{
				{
					loop{
						await(valveInjectorOnOff);
						emit dosUnitFilled;
						System.out.println("*Filler - Bottle Filled (Pressure Can At Top) *");
						await(valveInletOnOff);
						emit dosUnitEvac;
						System.out.println("*Filler - Inlet Open (Pressure Can At Bottem) *");
					}
				}
				//add sim at to emit pos2
				
				||
				
				{// To viz
				        {while(true){present(valveInjectorOnOff){emit valveInjectorOnOffE;} pause;}}
				        ||
				        {while(true){present(valveInletOnOff){emit valveInletOnOffE;} pause;}}
				        ||
				        {while(true){present(dosUnitValveRetract){emit dosUnitValveRetractE;} pause;}}
				        ||
				        {while(true){present(dosUnitValveExtend){;emit dosUnitValveExtendE;} pause;}}
				        ||
				        {while(true){present(bottleAtPos2){;emit bottleAtPos2E;} pause;}}
				        ||
				        {while(true){present(dosUnitEvac){;emit dosUnitEvacE;} pause;}}
				        ||
				        {while(true){present(dosUnitFilled){;emit dosUnitFilledE;} pause;}}
				}
}	

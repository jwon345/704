ConveyorCD(
		input signal bottleAtPos1, bottleLeftPos5;
		output signal motConveyorOnOff;
		input Boolean channel rotated;
		output Boolean channel convReady,incomingBaxter;
		)
	->
		{
			signal rotaryRotated,empty,insert;
			{
				loop{
					trap(T){
						{
							await(bottleAtPos1);
							pause;
							exit(T);
						}
						||
						{
							await(immediate empty);
							pause;
							send convReady(false);
						}
					}
					pause;
					emit insert;
					send convReady(false);
					pause;
					{send convReady(true);}||{await(rotaryRotated);}
					pause;
				}
			}
			||
			
			RotaryQueue(:insert, rotaryRotated, empty, incomingBaxter)
			||
			{
				loop{
					receive rotated;
					emit rotaryRotated;
					pause;
				}
			}
			||
			{
				sustain motConveyorOnOff;
			}
		}